class Solution {
    public ListNode reverseList(ListNode head){
        if(head == null || head.next == null){
            return head;
        }
        ListNode newHead = reverseList(head.next);
        head.next.next = head; // Make next node point to current node
        head.next = null; // break original list
        return newHead; // Return new head
    }    
    
}

Explaination:

ðŸ“Š Dry Run Summary:
Step	head	newHead	Link Reversed	List Status
1	1	5	2 â†’ 1, break 1	5 â†’ 4 â†’ 3 â†’ 2 â†’ 1 â†’ null
2	2	5	3 â†’ 2, break 2	5 â†’ 4 â†’ 3 â†’ 2 â†’ null
3	3	5	4 â†’ 3, break 3	5 â†’ 4 â†’ 3 â†’ null
4	4	5	5 â†’ 4, break 4	5 â†’ 4 â†’ null
5	5	5	No change (base case)	5 â†’ null

