2843. Count Symmetric Integers

class Solution {
    public int countSymmetricIntegers(int low, int high) {
        int count = 0; 
        for(int i = low; i<=high; i++){
            String s = Integer.toString(i);
            int len = s.length(); // Get the total no.of Digits
            if(len % 2 != 0) continue; // odd number of digits
            int half = len /2;         // Divide the digits into two halves
            int sum1 = 0, sum2 =0;     // store the sum of each half
            for(int j= 0; j< half ; j++){
                sum1 += s.charAt(j) - '0';    // convert character to digit and to sum1

            }
            for(int j = half; j< len ; j++){
                sum2 += s.charAt(j) - '0';

            }                             // if both halves have equal sum, it's a symmetric integer
            if(sum1 == sum2){
                count ++;
            }
        }
        return count;                 // Return the total count of Symmetric integers

        
    }
}
