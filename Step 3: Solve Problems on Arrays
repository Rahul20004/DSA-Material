class Solution {
    public int subarraySum(int[] nums, int k) {
       int count = 0;            // count of valid Subarrays
       int sum = 0;               // to store the prefix sum
       Map<Integer, Integer> map = new HashMap<>();    // to store prefix sum and its frequency
       map.put(0,1);                                // to handle case where sum itself equals to k
       for(int i=0; i<nums.length; i++){
           sum += nums[i];
           if(map.containsKey(sum-k)){
               count += map.get(sum-k);      // add the frequency of(sum -k) to count
           }
           map.merge(sum, 1, Integer::sum);
       }
       return count;          // Return the total count of valid subarrays 
    }
}


// count subarray whose sum is equal to k


